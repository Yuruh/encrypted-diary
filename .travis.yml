language: go

go:
  - 1.13.x

services:
  - docker

env:
  - GO111MODULE=on
  - DOCKER_COMPOSE_VERSION=1.4.2

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
# Only clone the most recent commit.
git:
  depth: 1

script:
  - docker-compose -f docker-compose.test.yml build
  - docker-compose -f docker-compose.test.yml -p diary-tests up -d
  - docker exec -it diary-tests_diary-api_1 go test -race -coverprofile=coverage.txt -covermode=atomic
#  - go test -race -coverprofile=coverage.txt -covermode=atomic

after_success:
  - docker exec -it diary-tests_diary-api_1 bash <(curl -s https://codecov.io/bash)

#envisionned steps:
  #unit tests
  #docker image build
  #integration tests (should probably run using a specific docker-compose)

  #stop here if it is not a merge to staging or master

  #git tagging based of major / minor / fix (in PR name ?)
  #image tagging based of git tag
  #push to docker image to registry

#env:
#TRAVIS_BRANCH:
  #
  #    for push builds, or builds not triggered by a pull request, this is the name of the branch.
  #    for builds triggered by a pull request this is the name of the branch targeted by the pull request.
  #    for builds triggered by a tag, this is the same as the name of the tag (TRAVIS_TAG).

#TRAVIS_COMMIT_MESSAGE: The commit subject and body, unwrapped.
#TRAVIS_PULL_REQUEST: The pull request number if the current job is a pull request, “false” if it’s not a pull request.
